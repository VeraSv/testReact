{"version":3,"sources":["todos/TodoForm.js","todos/useInputState.js","todos/TodoList.js","todos/Todos.js","todos/useTodoState.js","form1/Form1.js","form2/Form2.js","PagesLinks.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","saveTodo","useState","value","setValue","onChange","event","target","reset","useInputState","onSubmit","preventDefault","TextField","variant","placeholder","margin","TodoList","todos","deleteTodo","List","map","todo","index","ListItem","dense","button","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","onClick","toString","Todos","initialValue","setTodos","addTodo","todoText","todoIndex","newTodos","filter","_","useTodoState","className","Typography","component","trimmedText","trim","length","Form1","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","valuePropName","offset","type","htmlType","Form2","PagesLinks","to","exact","activeClassName","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.968cf027.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useInputState from './useInputState';\r\n\r\nconst TodoForm = ({ saveTodo }) => {\r\n    const { value, reset, onChange } = useInputState();\r\n\r\n    return (\r\n        <form\r\n            onSubmit={event => {\r\n                event.preventDefault();\r\n\r\n                saveTodo(value);\r\n                reset();\r\n            }}\r\n        >\r\n            <TextField\r\n                variant=\"outlined\"\r\n                placeholder=\"Add todo\"\r\n                margin=\"normal\"\r\n                onChange={onChange}\r\n                value={value}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoForm;\r\n","import { useState } from 'react';\r\n\r\nexport default () => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return {\r\n        value,\r\n        onChange: event => {\r\n            setValue(event.target.value);\r\n        },\r\n        reset: () => setValue('')\r\n    };\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TodoList = ({ todos, deleteTodo }) => (\r\n    <List>\r\n        {todos.map((todo, index) => (\r\n            <ListItem key={index.toString()} dense button>\r\n                <Checkbox tabIndex={-1} disableRipple />\r\n                <ListItemText primary={todo} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => {\r\n                            deleteTodo(index);\r\n                        }}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport useTodoState from './useTodoState';\r\n\r\n\r\nconst Todos = () => {\r\n\tconst { todos, addTodo, deleteTodo } = useTodoState([]);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Typography component=\"h1\" variant=\"h2\">\r\n\t\t\t\tTodos\r\n\t\t\t</Typography>\r\n\r\n\t\t\t<TodoForm\r\n\t\t\t\tsaveTodo={todoText => {\r\n\t\t\t\t\tconst trimmedText = todoText.trim();\r\n\r\n\t\t\t\t\tif (trimmedText.length > 0) {\r\n\t\t\t\t\t\taddTodo(trimmedText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\r\n\t\t\t/>\r\n\r\n\t\t\t<TodoList todos={todos} deleteTodo={deleteTodo} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport default Todos;\r\n","import { useState } from 'react';\r\n\r\nexport default initialValue => {\r\n    const [todos, setTodos] = useState(initialValue);\r\n\r\n    return {\r\n        todos,\r\n        addTodo: todoText => {\r\n            setTodos([...todos, todoText]);\r\n        },\r\n        deleteTodo: todoIndex => {\r\n            const newTodos = todos.filter((_, index) => index !== todoIndex);\r\n\r\n            setTodos(newTodos);\r\n        }\r\n    };\r\n};\r\n\r\n","import { Form, Input, Button, Checkbox } from 'antd';\r\nconst Form1 = () => {\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 8,\r\n            }}\r\n            wrapperCol={{\r\n                span: 16,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Login\"\r\n                name=\"login\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your login!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Form1;\r\n","import Form1 from \"../form1/Form1\";\r\n\r\n//import { Form, Input, Button, Checkbox } from 'antd';\r\nconst Form2 = () => {\r\n  /*const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Login\"\r\n        name=\"login\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your login!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );*/\r\n};\r\n\r\nexport default Form2;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './PagesLinks.css';\r\n\r\nfunction PagesLinks() {\r\n\r\n\r\n    return (\r\n        <div >\r\n            <NavLink to=\"/\" exact className=\"PageLink\" activeClassName=\"ActivePageLink\">Todo list</NavLink>\r\n            <NavLink to=\"/form1\" className=\"PageLink\" activeClassName=\"ActivePageLink\">Form1</NavLink>\r\n            <NavLink to=\"/form2\" className=\"PageLink\" activeClassName=\"ActivePageLink\">Form2</NavLink>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PagesLinks;","import React from 'react';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Todos from './todos/Todos';\nimport Form1 from './form1/Form1';\nimport Form2 from './form2/Form2';\nimport PagesLinks from './PagesLinks';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <BrowserRouter>\n        <PagesLinks />\n        <Route path='/' exact component={() => <Todos />} />\n        <Route path='/form1' component={() => <Form1 />} />\n        <Route path='/form2' component={() => <Form2 />} />\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}